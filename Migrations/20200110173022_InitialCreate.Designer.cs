// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SpotifyPlaylistsApi;

namespace SpotifyPlaylistsApi.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200110173022_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.Artists", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ExternalUrlSpotify");

                    b.Property<string>("Name");

                    b.Property<long?>("TracksId");

                    b.HasKey("Id");

                    b.HasIndex("TracksId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.PlaylistCategories", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("PlaylistCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Value = "Blues"
                        },
                        new
                        {
                            Id = 2L,
                            Value = "Country"
                        },
                        new
                        {
                            Id = 3L,
                            Value = "Disco polo"
                        },
                        new
                        {
                            Id = 4L,
                            Value = "Elektroniczna"
                        },
                        new
                        {
                            Id = 5L,
                            Value = "Folk"
                        },
                        new
                        {
                            Id = 6L,
                            Value = "Filmowa"
                        },
                        new
                        {
                            Id = 7L,
                            Value = "Hip-hop"
                        },
                        new
                        {
                            Id = 8L,
                            Value = "Jazz"
                        },
                        new
                        {
                            Id = 9L,
                            Value = "Metal"
                        },
                        new
                        {
                            Id = 10L,
                            Value = "Pop"
                        },
                        new
                        {
                            Id = 11L,
                            Value = "Poważna"
                        },
                        new
                        {
                            Id = 12L,
                            Value = "Reggae"
                        },
                        new
                        {
                            Id = 13L,
                            Value = "Rock"
                        },
                        new
                        {
                            Id = 14L,
                            Value = "Inne"
                        });
                });

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.Playlists", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Category");

                    b.Property<string>("Color");

                    b.Property<string>("Description");

                    b.Property<bool>("Favourite");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.Tracks", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("DurationMs");

                    b.Property<string>("ExternalId")
                        .IsRequired();

                    b.Property<string>("ExternalUrlSpotify");

                    b.Property<string>("Name");

                    b.Property<long?>("PlaylistsId");

                    b.Property<string>("PreviewUrl");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistsId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.Artists", b =>
                {
                    b.HasOne("SpotifyPlaylistsApi.Models.Tracks")
                        .WithMany("Artists")
                        .HasForeignKey("TracksId");
                });

            modelBuilder.Entity("SpotifyPlaylistsApi.Models.Tracks", b =>
                {
                    b.HasOne("SpotifyPlaylistsApi.Models.Playlists")
                        .WithMany("Tracks")
                        .HasForeignKey("PlaylistsId");
                });
#pragma warning restore 612, 618
        }
    }
}
